
package eu.x_road.us_folk_v3.producer;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import eu.x_road.xsd.identifiers.XRoadClientIdentifierType;
import eu.x_road.xsd.identifiers.XRoadServiceIdentifierType;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.3
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UsFolkPortType", targetNamespace = "http://us-folk-v3.x-road.eu/producer")
@XmlSeeAlso({
    eu.x_road.us_folk_v3.producer.ObjectFactory.class,
    eu.x_road.xsd.identifiers.ObjectFactory.class,
    eu.x_road.xsd.xroad.ObjectFactory.class,
    org.w3._2005._05.xmlmime.ObjectFactory.class
})
public interface UsFolkPortType {


    /**
     * 
     * @param result
     * @param request
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param message
     * @param userId
     * @param status
     */
    @WebMethod(operationName = "GetMyPrivileges", action = "GetMyPrivileges")
    @RequestWrapper(localName = "GetMyPrivileges", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetMyPrivileges")
    @ResponseWrapper(localName = "GetMyPrivilegesResponse", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetMyPrivilegesResponse")
    public void getMyPrivileges(
        @WebParam(name = "request", targetNamespace = "")
        Object request,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<PrivilegeList> result,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion);

    /**
     * 
     * @param result
     * @param request
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param message
     * @param userId
     * @param status
     */
    @WebMethod(operationName = "GetPrivilegesSmall", action = "GetPrivilegesSmall")
    @RequestWrapper(localName = "GetPrivilegesSmall", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPrivilegesSmall")
    @ResponseWrapper(localName = "GetPrivilegesSmallResponse", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPrivilegesSmallResponse")
    public void getPrivilegesSmall(
        @WebParam(name = "request", targetNamespace = "")
        Object request,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<PrivilegeList> result,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion);

    /**
     * 
     * @param result
     * @param request
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param message
     * @param userId
     * @param status
     */
    @WebMethod(operationName = "GetPrivilegesMedium", action = "GetPrivilegesMedium")
    @RequestWrapper(localName = "GetPrivilegesMedium", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPrivilegesMedium")
    @ResponseWrapper(localName = "GetPrivilegesMediumResponse", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPrivilegesMediumResponse")
    public void getPrivilegesMedium(
        @WebParam(name = "request", targetNamespace = "")
        Object request,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<PrivilegeList> result,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion);

    /**
     * 
     * @param result
     * @param request
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param message
     * @param userId
     * @param status
     */
    @WebMethod(operationName = "GetPersonSmallByPrivateId", action = "GetPersonSmallByPrivateId")
    @RequestWrapper(localName = "GetPersonSmallByPrivateId", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPersonSmallByPrivateId")
    @ResponseWrapper(localName = "GetPersonSmallByPrivateIdResponse", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPersonSmallByPrivateIdResponse")
    public void getPersonSmallByPrivateId(
        @WebParam(name = "request", targetNamespace = "")
        PrivateId request,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<PersonSmall> result,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion);

    /**
     * 
     * @param result
     * @param request
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param message
     * @param userId
     * @param status
     */
    @WebMethod(operationName = "GetPersonSmallByPtal", action = "GetPersonSmallByPtal")
    @RequestWrapper(localName = "GetPersonSmallByPtal", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPersonSmallByPtal")
    @ResponseWrapper(localName = "GetPersonSmallByPtalResponse", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPersonSmallByPtalResponse")
    public void getPersonSmallByPtal(
        @WebParam(name = "request", targetNamespace = "")
        String request,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<PersonSmall> result,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion);

    /**
     * 
     * @param result
     * @param request
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param message
     * @param userId
     * @param status
     */
    @WebMethod(operationName = "GetPersonSmallByNameAndAddress", action = "GetPersonSmallByNameAndAddress")
    @RequestWrapper(localName = "GetPersonSmallByNameAndAddress", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPersonSmallByNameAndAddress")
    @ResponseWrapper(localName = "GetPersonSmallByNameAndAddressResponse", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPersonSmallByNameAndAddressResponse")
    public void getPersonSmallByNameAndAddress(
        @WebParam(name = "request", targetNamespace = "")
        NameAndAddressParam request,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<PersonSmall> result,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion);

    /**
     * 
     * @param result
     * @param request
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param message
     * @param userId
     * @param status
     */
    @WebMethod(operationName = "GetPersonSmallByNameAndDateOfBirth", action = "GetPersonSmallByNameAndDateOfBirth")
    @RequestWrapper(localName = "GetPersonSmallByNameAndDateOfBirth", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPersonSmallByNameAndDateOfBirth")
    @ResponseWrapper(localName = "GetPersonSmallByNameAndDateOfBirthResponse", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPersonSmallByNameAndDateOfBirthResponse")
    public void getPersonSmallByNameAndDateOfBirth(
        @WebParam(name = "request", targetNamespace = "")
        NameAndDateOfBirthParam request,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<PersonSmall> result,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion);

    /**
     * 
     * @param result
     * @param request
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param message
     * @param userId
     * @param status
     */
    @WebMethod(operationName = "GetPersonMediumByPrivateId", action = "GetPersonMediumByPrivateId")
    @RequestWrapper(localName = "GetPersonMediumByPrivateId", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPersonMediumByPrivateId")
    @ResponseWrapper(localName = "GetPersonMediumByPrivateIdResponse", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPersonMediumByPrivateIdResponse")
    public void getPersonMediumByPrivateId(
        @WebParam(name = "request", targetNamespace = "")
        PrivateId request,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<PersonMedium> result,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion);

    /**
     * 
     * @param result
     * @param request
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param message
     * @param userId
     * @param status
     */
    @WebMethod(operationName = "GetPersonMediumByPublicId", action = "GetPersonMediumByPublicId")
    @RequestWrapper(localName = "GetPersonMediumByPublicId", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPersonMediumByPublicId")
    @ResponseWrapper(localName = "GetPersonMediumByPublicIdResponse", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPersonMediumByPublicIdResponse")
    public void getPersonMediumByPublicId(
        @WebParam(name = "request", targetNamespace = "")
        PublicId request,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<PersonMedium> result,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion);

    /**
     * 
     * @param result
     * @param request
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param message
     * @param userId
     * @param status
     */
    @WebMethod(operationName = "GetPersonMediumByPtal", action = "GetPersonMediumByPtal")
    @RequestWrapper(localName = "GetPersonMediumByPtal", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPersonMediumByPtal")
    @ResponseWrapper(localName = "GetPersonMediumByPtalResponse", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPersonMediumByPtalResponse")
    public void getPersonMediumByPtal(
        @WebParam(name = "request", targetNamespace = "")
        String request,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<PersonMedium> result,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion);

    /**
     * 
     * @param result
     * @param request
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param message
     * @param userId
     * @param status
     */
    @WebMethod(operationName = "GetPersonMediumByNameAndAddress", action = "GetPersonMediumByNameAndAddress")
    @RequestWrapper(localName = "GetPersonMediumByNameAndAddress", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPersonMediumByNameAndAddress")
    @ResponseWrapper(localName = "GetPersonMediumByNameAndAddressResponse", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPersonMediumByNameAndAddressResponse")
    public void getPersonMediumByNameAndAddress(
        @WebParam(name = "request", targetNamespace = "")
        NameAndAddressParam request,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<PersonMedium> result,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion);

    /**
     * 
     * @param result
     * @param request
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param message
     * @param userId
     * @param status
     */
    @WebMethod(operationName = "GetPersonMediumByNameAndDateOfBirth", action = "GetPersonMediumByNameAndDateOfBirth")
    @RequestWrapper(localName = "GetPersonMediumByNameAndDateOfBirth", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPersonMediumByNameAndDateOfBirth")
    @ResponseWrapper(localName = "GetPersonMediumByNameAndDateOfBirthResponse", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPersonMediumByNameAndDateOfBirthResponse")
    public void getPersonMediumByNameAndDateOfBirth(
        @WebParam(name = "request", targetNamespace = "")
        NameAndDateOfBirthParam request,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<PersonMedium> result,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion);

    /**
     * 
     * @param result
     * @param request
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param message
     * @param userId
     * @param status
     */
    @WebMethod(operationName = "GetPrivateChanges", action = "GetPrivateChanges")
    @RequestWrapper(localName = "GetPrivateChanges", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPrivateChanges")
    @ResponseWrapper(localName = "GetPrivateChangesResponse", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPrivateChangesResponse")
    public void getPrivateChanges(
        @WebParam(name = "request", targetNamespace = "")
        ChangesParam request,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<PrivateChanges> result,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion);

    /**
     * 
     * @param result
     * @param request
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param message
     * @param userId
     * @param status
     */
    @WebMethod(operationName = "GetPublicChanges", action = "GetPublicChanges")
    @RequestWrapper(localName = "GetPublicChanges", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPublicChanges")
    @ResponseWrapper(localName = "GetPublicChangesResponse", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetPublicChangesResponse")
    public void getPublicChanges(
        @WebParam(name = "request", targetNamespace = "")
        ChangesParam request,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<PublicChanges> result,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion);

    /**
     * 
     * @param result
     * @param request
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param message
     * @param userId
     * @param status
     */
    @WebMethod(operationName = "AddPersonToCommunityByNameAndAddress", action = "AddPersonToCommunityByNameAndAddress")
    @RequestWrapper(localName = "AddPersonToCommunityByNameAndAddress", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.AddPersonToCommunityByNameAndAddress")
    @ResponseWrapper(localName = "AddPersonToCommunityByNameAndAddressResponse", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.AddPersonToCommunityByNameAndAddressResponse")
    public void addPersonToCommunityByNameAndAddress(
        @WebParam(name = "request", targetNamespace = "")
        NameAndAddressParam request,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<CommunityPerson> result,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion);

    /**
     * 
     * @param result
     * @param request
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param message
     * @param userId
     * @param status
     */
    @WebMethod(operationName = "AddPersonToCommunityByNameAndDateOfBirth", action = "AddPersonToCommunityByNameAndDateOfBirth")
    @RequestWrapper(localName = "AddPersonToCommunityByNameAndDateOfBirth", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.AddPersonToCommunityByNameAndDateOfBirth")
    @ResponseWrapper(localName = "AddPersonToCommunityByNameAndDateOfBirthResponse", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.AddPersonToCommunityByNameAndDateOfBirthResponse")
    public void addPersonToCommunityByNameAndDateOfBirth(
        @WebParam(name = "request", targetNamespace = "")
        NameAndDateOfBirthParam request,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<CommunityPerson> result,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion);

    /**
     * 
     * @param result
     * @param request
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param message
     * @param userId
     * @param status
     */
    @WebMethod(operationName = "RemovePersonsFromCommunity", action = "RemovePersonsFromCommunity")
    @RequestWrapper(localName = "RemovePersonsFromCommunity", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.RemovePersonsFromCommunity")
    @ResponseWrapper(localName = "RemovePersonsFromCommunityResponse", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.RemovePersonsFromCommunityResponse")
    public void removePersonsFromCommunity(
        @WebParam(name = "request", targetNamespace = "")
        PrivateIdList request,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<PrivateIdList> result,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion);

    /**
     * 
     * @param result
     * @param request
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param message
     * @param userId
     * @param status
     */
    @WebMethod(operationName = "GetSystemStatus", action = "GetSystemStatus")
    @RequestWrapper(localName = "GetSystemStatus", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetSystemStatus")
    @ResponseWrapper(localName = "GetSystemStatusResponse", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.GetSystemStatusResponse")
    public void getSystemStatus(
        @WebParam(name = "request", targetNamespace = "")
        Object request,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<SystemStatusList> result,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion);

    /**
     * 
     * @param result
     * @param request
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param message
     * @param userId
     * @param status
     */
    @WebMethod(operationName = "RefreshConsumer", action = "RefreshConsumer")
    @RequestWrapper(localName = "RefreshConsumer", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.RefreshConsumer")
    @ResponseWrapper(localName = "RefreshConsumerResponse", targetNamespace = "http://us-folk-v3.x-road.eu/producer", className = "eu.x_road.us_folk_v3.producer.RefreshConsumerResponse")
    public void refreshConsumer(
        @WebParam(name = "request", targetNamespace = "")
        Object request,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "message", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> message,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> result,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion);

}
